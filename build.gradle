buildscript {
    ext.kotlin_version = '1.1.3-2'
    ext.dokka_version = '0.9.10'

    repositories {
        mavenCentral()
    }


    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.13.1'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
}

group 'com.github.jonathanxd'
version '1.6.2'

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'license'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: "kotlin"
    apply plugin: 'org.jetbrains.dokka'

    license {
        header rootProject.file("LICENSE_HEADER")
    }

}

defaultTasks 'licenseFormat', 'build', 'test', 'jar', 'shadowJar'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// Setup

ext {
    description = "Adapter management helper."
}

subprojects {

    shadowJar {
        dependencies {
            include(project(rootProject.getPath()))
        }
    }
}

shadowJar {
    dependencies {
        include(dependency("com.github.JonathanxD:JwIUtils"))
    }
}

// Tasks
dokka {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
}

jar {
    from "$rootProject.rootDir/LICENSE"

    manifest {
        attributes 'Implementation-Title': baseName,
                'Implementation-Version': version
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: dokka) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives shadowJar
}

subprojects {

    dependencies {
        compile rootProject
        testCompile rootProject.sourceSets.test.output
    }
}

allprojects {
    dependencies {
        compile 'com.github.JonathanxD:JwIUtils:4.6.0a'
        compile 'com.github.JonathanxD:CodeAPI-BytecodeWriter:alpha-4.0.0-bytecode-14'
        compile 'com.github.JonathanxD:CodeProxy:2.1.5'
        compile 'com.github.JonathanxD:CodeGenUtil:1.2.3'
        compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    test {
        useJUnit()
    }
}

allprojects {
    license {
        String name = project.getName()
        String description = project.ext.description

        ext.name = "$name"
        ext.organization = 'TheRealBuggy/JonathanxD (https://github.com/JonathanxD/ & https://github.com/TheRealBuggy/)'
        ext.description = "$description"
        ext.url = 'https://github.com/JonathanxD/AdapterHelper'
        ext.year = Calendar.getInstance().get(Calendar.YEAR)
        ext.email = 'jonathan.scripter@programmer.net'

        exclude "**/*.info"
        exclude "**/*.md"
        exclude "res/**"
        exclude "src/main/resources/**"
        exclude "src/test/resources/**"

        header rootProject.file('LICENSE_HEADER')

        sourceSets = project.sourceSets

        ignoreFailures false
        strictCheck true

        mapping {
            java = 'SLASHSTAR_STYLE'
            kt = 'JAVADOC_STYLE'
        }
    }
}
